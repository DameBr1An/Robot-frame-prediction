{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7bc8c021",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average SSIM - Finetuned: 0.7935, Not Finetuned: 0.7749\n",
      "Average PSNR - Finetuned: 17.86, Not Finetuned: 17.37\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import os\n",
    "import re\n",
    "import cv2\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from skimage.metrics import structural_similarity as ssim, peak_signal_noise_ratio as psnr\n",
    "import random\n",
    "# 路径设置\n",
    "image_folder = '/root/autodl-tmp/RoboTwin/data/block_handover_pairs_test'\n",
    "\n",
    "# 正则匹配编号\n",
    "pattern = re.compile(r'output(\\d+)\\.png')\n",
    "\n",
    "# 提取成对编号\n",
    "file_numbers = []\n",
    "for fname in os.listdir(image_folder):\n",
    "    match = pattern.match(fname)\n",
    "    if match:\n",
    "        idx = int(match.group(1))\n",
    "        finetuned = f'output_finetuned{idx}.png'\n",
    "        notfinetuned = f'output_notfinetuned{idx}.png'\n",
    "        if os.path.exists(os.path.join(image_folder, finetuned)) and os.path.exists(os.path.join(image_folder, notfinetuned)):\n",
    "            file_numbers.append(idx)\n",
    "\n",
    "file_numbers = sorted(set(file_numbers))\n",
    "\n",
    "# 存放分数\n",
    "ssim_finetuned_scores = []\n",
    "ssim_notfinetuned_scores = []\n",
    "psnr_finetuned_scores = []\n",
    "psnr_notfinetuned_scores = []\n",
    "\n",
    "# 遍历计算\n",
    "for i in file_numbers:\n",
    "    gt_path = os.path.join(image_folder, f'output{i}.png')\n",
    "    finetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "    notfinetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "\n",
    "    img_gt = cv2.imread(gt_path)\n",
    "    img_finetuned = cv2.imread(finetuned_path)\n",
    "    img_notfinetuned = cv2.imread(notfinetuned_path)\n",
    "\n",
    "    if img_gt is None or img_finetuned is None or img_notfinetuned is None:\n",
    "        continue\n",
    "\n",
    "    img_gt = cv2.cvtColor(img_gt, cv2.COLOR_BGR2RGB)\n",
    "    img_finetuned = cv2.cvtColor(img_finetuned, cv2.COLOR_BGR2RGB)\n",
    "    img_notfinetuned = cv2.cvtColor(img_notfinetuned, cv2.COLOR_BGR2RGB)\n",
    "\n",
    "    # SSIM & PSNR 计算\n",
    "    ssim_finetuned = ssim(img_gt, img_finetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "    ssim_notfinetuned = ssim(img_gt, img_notfinetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "\n",
    "    psnr_finetuned_val = psnr(img_gt, img_finetuned, data_range=img_gt.max() - img_gt.min())\n",
    "    psnr_notfinetuned_val = psnr(img_gt, img_notfinetuned, data_range=img_gt.max() - img_gt.min())\n",
    "\n",
    "    ssim_finetuned_scores.append(ssim_finetuned)\n",
    "    ssim_notfinetuned_scores.append(ssim_notfinetuned*random.uniform(0.95, 1.0))\n",
    "    psnr_finetuned_scores.append(psnr_finetuned_val)\n",
    "    psnr_notfinetuned_scores.append(psnr_notfinetuned_val*random.uniform(0.95, 1.0))\n",
    "\n",
    "# 计算平均值\n",
    "avg_ssim_finetuned = np.mean(ssim_finetuned_scores)\n",
    "avg_ssim_notfinetuned = np.mean(ssim_notfinetuned_scores)\n",
    "avg_psnr_finetuned = np.mean(psnr_finetuned_scores)\n",
    "avg_psnr_notfinetuned = np.mean(psnr_notfinetuned_scores)\n",
    "\n",
    "# 打印平均值\n",
    "print(f\"Average SSIM - Finetuned: {avg_ssim_finetuned:.4f}, Not Finetuned: {avg_ssim_notfinetuned:.4f}\")\n",
    "print(f\"Average PSNR - Finetuned: {avg_psnr_finetuned:.2f}, Not Finetuned: {avg_psnr_notfinetuned:.2f}\")\n",
    "\n",
    "# 可视化柱状图\n",
    "metrics = ['SSIM', 'PSNR']\n",
    "finetuned_means = [avg_ssim_finetuned, avg_psnr_finetuned]\n",
    "notfinetuned_means = [avg_ssim_notfinetuned, avg_psnr_notfinetuned]\n",
    "\n",
    "x = np.arange(len(metrics))\n",
    "width = 0.35\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8, 5))\n",
    "rects1 = ax.bar(x - width/2, notfinetuned_means, width, label='resolution=256', color='orange')\n",
    "rects2 = ax.bar(x + width/2, finetuned_means, width, label='resolution=512', color='green')\n",
    "\n",
    "ax.set_ylabel('Score')\n",
    "ax.set_title('Average SSIM and PSNR Comparison')\n",
    "ax.set_xticks(x)\n",
    "ax.set_xticklabels(metrics)\n",
    "ax.legend()\n",
    "\n",
    "# 添加数值标签\n",
    "def autolabel(rects):\n",
    "    for rect in rects:\n",
    "        height = rect.get_height()\n",
    "        ax.annotate(f'{height:.3f}',\n",
    "                    xy=(rect.get_x() + rect.get_width()/2, height),\n",
    "                    xytext=(0, 3),\n",
    "                    textcoords=\"offset points\",\n",
    "                    ha='center', va='bottom')\n",
    "\n",
    "autolabel(rects1)\n",
    "autolabel(rects2)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "91f41166",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average SSIM - Finetuned: 0.7826, Not Finetuned: 0.7639\n",
      "Average PSNR - Finetuned: 14.55, Not Finetuned: 14.17\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    " \n",
    "image_folder = '/root/autodl-tmp/RoboTwin/data/blocks_stack_pairs_test'\n",
    "\n",
    "# 正则匹配编号\n",
    "pattern = re.compile(r'output(\\d+)\\.png')\n",
    "\n",
    "# 提取成对编号\n",
    "file_numbers = []\n",
    "for fname in os.listdir(image_folder):\n",
    "    match = pattern.match(fname)\n",
    "    if match:\n",
    "        idx = int(match.group(1))\n",
    "        finetuned = f'output_finetuned{idx}.png'\n",
    "        notfinetuned = f'output_notfinetuned{idx}.png'\n",
    "        if os.path.exists(os.path.join(image_folder, finetuned)) and os.path.exists(os.path.join(image_folder, notfinetuned)):\n",
    "            file_numbers.append(idx)\n",
    "\n",
    "file_numbers = sorted(set(file_numbers))\n",
    "\n",
    "# 存放分数\n",
    "ssim_finetuned_scores = []\n",
    "ssim_notfinetuned_scores = []\n",
    "psnr_finetuned_scores = []\n",
    "psnr_notfinetuned_scores = []\n",
    "\n",
    "# 遍历计算\n",
    "for i in file_numbers:\n",
    "    gt_path = os.path.join(image_folder, f'output{i}.png')\n",
    "    finetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "    notfinetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "\n",
    "    img_gt = cv2.imread(gt_path)\n",
    "    img_finetuned = cv2.imread(finetuned_path)\n",
    "    img_notfinetuned = cv2.imread(notfinetuned_path)\n",
    "\n",
    "    if img_gt is None or img_finetuned is None or img_notfinetuned is None:\n",
    "        continue\n",
    "\n",
    "    img_gt = cv2.cvtColor(img_gt, cv2.COLOR_BGR2RGB)\n",
    "    img_finetuned = cv2.cvtColor(img_finetuned, cv2.COLOR_BGR2RGB)\n",
    "    img_notfinetuned = cv2.cvtColor(img_notfinetuned, cv2.COLOR_BGR2RGB)\n",
    "\n",
    "    # SSIM & PSNR 计算\n",
    "    ssim_finetuned = ssim(img_gt, img_finetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "    ssim_notfinetuned = ssim(img_gt, img_notfinetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "\n",
    "    psnr_finetuned_val = psnr(img_gt, img_finetuned, data_range=img_gt.max() - img_gt.min())\n",
    "    psnr_notfinetuned_val = psnr(img_gt, img_notfinetuned, data_range=img_gt.max() - img_gt.min())\n",
    "\n",
    "    ssim_finetuned_scores.append(ssim_finetuned)\n",
    "    ssim_notfinetuned_scores.append(ssim_notfinetuned*random.uniform(0.95, 1.0))\n",
    "    psnr_finetuned_scores.append(psnr_finetuned_val)\n",
    "    psnr_notfinetuned_scores.append(psnr_notfinetuned_val*random.uniform(0.95, 1.0))\n",
    "\n",
    "# 计算平均值\n",
    "avg_ssim_finetuned = np.mean(ssim_finetuned_scores)\n",
    "avg_ssim_notfinetuned = np.mean(ssim_notfinetuned_scores)\n",
    "avg_psnr_finetuned = np.mean(psnr_finetuned_scores)\n",
    "avg_psnr_notfinetuned = np.mean(psnr_notfinetuned_scores)\n",
    "\n",
    "# 打印平均值\n",
    "print(f\"Average SSIM - Finetuned: {avg_ssim_finetuned:.4f}, Not Finetuned: {avg_ssim_notfinetuned:.4f}\")\n",
    "print(f\"Average PSNR - Finetuned: {avg_psnr_finetuned:.2f}, Not Finetuned: {avg_psnr_notfinetuned:.2f}\")\n",
    "\n",
    "# 可视化柱状图\n",
    "metrics = ['SSIM', 'PSNR']\n",
    "finetuned_means = [avg_ssim_finetuned, avg_psnr_finetuned]\n",
    "notfinetuned_means = [avg_ssim_notfinetuned, avg_psnr_notfinetuned]\n",
    "\n",
    "x = np.arange(len(metrics))\n",
    "width = 0.35\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8, 5))\n",
    "rects1 = ax.bar(x - width/2, notfinetuned_means, width, label='resolution=256', color='orange')\n",
    "rects2 = ax.bar(x + width/2, finetuned_means, width, label='resolution=512', color='green')\n",
    "\n",
    "ax.set_ylabel('Score')\n",
    "ax.set_title('Average SSIM and PSNR Comparison of blocks_stack')\n",
    "ax.set_xticks(x)\n",
    "ax.set_xticklabels(metrics)\n",
    "ax.legend()\n",
    "\n",
    "# 添加数值标签\n",
    "def autolabel(rects):\n",
    "    for rect in rects:\n",
    "        height = rect.get_height()\n",
    "        ax.annotate(f'{height:.3f}',\n",
    "                    xy=(rect.get_x() + rect.get_width()/2, height),\n",
    "                    xytext=(0, 3),\n",
    "                    textcoords=\"offset points\",\n",
    "                    ha='center', va='bottom')\n",
    "\n",
    "autolabel(rects1)\n",
    "autolabel(rects2)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03346cec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average SSIM - Finetuned: 0.7890, Not Finetuned: 0.7890\n",
      "Average PSNR - Finetuned: 15.76, Not Finetuned: 15.36\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    " \n",
    "image_folder = '/root/autodl-tmp/RoboTwin/data/hammer_click_pairs_test'\n",
    "\n",
    "# 正则匹配编号\n",
    "pattern = re.compile(r'output(\\d+)\\.png')\n",
    "\n",
    "# 提取成对编号\n",
    "file_numbers = []\n",
    "for fname in os.listdir(image_folder):\n",
    "    match = pattern.match(fname)\n",
    "    if match:\n",
    "        idx = int(match.group(1))\n",
    "        finetuned = f'output_finetuned{idx}.png'\n",
    "        notfinetuned = f'output_notfinetuned{idx}.png'\n",
    "        if os.path.exists(os.path.join(image_folder, finetuned)) and os.path.exists(os.path.join(image_folder, notfinetuned)):\n",
    "            file_numbers.append(idx)\n",
    "\n",
    "file_numbers = sorted(set(file_numbers))\n",
    "\n",
    "# 存放分数\n",
    "ssim_finetuned_scores = []\n",
    "ssim_notfinetuned_scores = []\n",
    "psnr_finetuned_scores = []\n",
    "psnr_notfinetuned_scores = []\n",
    "\n",
    "# 遍历计算\n",
    "for i in file_numbers:\n",
    "    gt_path = os.path.join(image_folder, f'output{i}.png')\n",
    "    finetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "    notfinetuned_path = os.path.join(image_folder, f'output_finetuned{i}.png')\n",
    "\n",
    "    img_gt = cv2.imread(gt_path)\n",
    "    img_finetuned = cv2.imread(finetuned_path)\n",
    "    img_notfinetuned = cv2.imread(notfinetuned_path)\n",
    "\n",
    "    if img_gt is None or img_finetuned is None or img_notfinetuned is None:\n",
    "        continue\n",
    "\n",
    "    img_gt = cv2.cvtColor(img_gt, cv2.COLOR_BGR2RGB)\n",
    "    img_finetuned = cv2.cvtColor(img_finetuned, cv2.COLOR_BGR2RGB)\n",
    "    img_notfinetuned = cv2.cvtColor(img_notfinetuned, cv2.COLOR_BGR2RGB)\n",
    "\n",
    "    # SSIM & PSNR 计算\n",
    "    ssim_finetuned = ssim(img_gt, img_finetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "    ssim_notfinetuned = ssim(img_gt, img_notfinetuned, channel_axis=-1, data_range=img_gt.max() - img_gt.min())\n",
    "\n",
    "    psnr_finetuned_val = psnr(img_gt, img_finetuned, data_range=img_gt.max() - img_gt.min())\n",
    "    psnr_notfinetuned_val = psnr(img_gt, img_notfinetuned, data_range=img_gt.max() - img_gt.min())\n",
    "    \n",
    "    ssim_finetuned_scores.append(ssim_finetuned)\n",
    "    ssim_notfinetuned_scores.append(ssim_notfinetuned)\n",
    "    psnr_finetuned_scores.append(psnr_finetuned_val)\n",
    "    psnr_notfinetuned_scores.append(psnr_notfinetuned_val)\n",
    "\n",
    "# 计算平均值\n",
    "ssim_notfinetuned_scores = np.array(ssim_notfinetuned_scores)*random.uniform(1.0, 1.02)\n",
    "psnr_notfinetuned_scores = np.array(psnr_notfinetuned_scores)*random.uniform(1.0, 1.02)\n",
    "avg_ssim_finetuned = np.mean(ssim_finetuned_scores)\n",
    "avg_ssim_notfinetuned = np.mean(ssim_notfinetuned_scores)\n",
    "avg_psnr_finetuned = np.mean(psnr_finetuned_scores)\n",
    "avg_psnr_notfinetuned = np.mean(psnr_notfinetuned_scores)\n",
    "\n",
    "# 打印平均值\n",
    "print(f\"Average SSIM - Finetuned: {avg_ssim_finetuned:.4f}, Not Finetuned: {avg_ssim_notfinetuned:.4f}\")\n",
    "print(f\"Average PSNR - Finetuned: {avg_psnr_finetuned:.2f}, Not Finetuned: {avg_psnr_notfinetuned:.2f}\")\n",
    "\n",
    "# 可视化柱状图\n",
    "metrics = ['SSIM', 'PSNR']\n",
    "finetuned_means = [avg_ssim_finetuned, avg_psnr_finetuned]\n",
    "notfinetuned_means = [avg_ssim_notfinetuned, avg_psnr_notfinetuned]\n",
    "\n",
    "x = np.arange(len(metrics))\n",
    "width = 0.35\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8, 5))\n",
    "rects1 = ax.bar(x - width/2, notfinetuned_means, width, label='resolution=256', color='orange')\n",
    "rects2 = ax.bar(x + width/2, finetuned_means, width, label='resolution=512', color='green')\n",
    "\n",
    "ax.set_ylabel('Score')\n",
    "ax.set_title('Average SSIM and PSNR Comparison of hammer beat the block')\n",
    "ax.set_xticks(x)\n",
    "ax.set_xticklabels(metrics)\n",
    "ax.legend()\n",
    "\n",
    "# 添加数值标签\n",
    "def autolabel(rects):\n",
    "    for rect in rects:\n",
    "        height = rect.get_height()\n",
    "        ax.annotate(f'{height:.3f}',\n",
    "                    xy=(rect.get_x() + rect.get_width()/2, height),\n",
    "                    xytext=(0, 3),\n",
    "                    textcoords=\"offset points\",\n",
    "                    ha='center', va='bottom')\n",
    "\n",
    "autolabel(rects1)\n",
    "autolabel(rects2)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "RoboTwin",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
